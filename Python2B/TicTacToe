'''
## TO DO
implement update win condition
implement update tie condition

write tic tac ai for computer move
list available squares
score each square
1 for each row / column / diagonal with 1 X
5 for each with 2 Xs
25 for each with 3 Xs
offense picks the move with the highest score
defense blocks the opponents highest score
random first move?
random choice if more than one move with same score?

implement tic tac toe api using tic tac toe ai?

add computer goes first mode
add two player mode

improve display

version with board class & methods?

'''
## CONSTANTS
symbols = [" ", "X", "O", " ", "1", "2", "3"]

board = [
  [3, 4, 5, 6],
  [4, 0, 0, 0],
  [5, 0, 0, 0],
  [6, 0, 0, 0]
]

row_with_dividers = [1, 2, 3]


## FUNCTIONS
from random import randint

def display_cell(r, c):
  index = board[r][c]
  return symbols[index]
  
def display_board():
  
  for row in range(3 + 1):
    line = ""

    for col in range(3 + 1):
      if row in row_with_dividers:
        line += " " + display_cell(row, col) + " "

        divider = ("|" if col > 0 else " ")
        line += divider
        
      else:
        line += " " + display_cell(row, col) + " " + " "
      
    line = line[:-2]
    print(line)

    if row in row_with_dividers[0:2]:
      print("     - + - + - ")
    else:
      print("\n")
    
def player_moves():
  valid = False
  while not valid:
    row = int(input("What row? "))
    col = int(input("What column? "))
    valid = board[row][col] == 0

    if not valid:
      print("That move is not available")
    else:
      board[row][col] = 1

    print("\n")

def computer_moves():
  valid = False
  while not valid:
    row = randint(1, 3)
    col = randint(1, 3)
    valid = board[row][col] == 0

    if valid:
      board[row][col] = 2

def tic_tac_toe():
  win = False
  tie = False
  while not win and not tie:
    display_board()

    # player moves
    player_moves()

    # computer moves
    computer_moves()

    # test for win

    # test for tie

## MAIN
tic_tac_toe()
